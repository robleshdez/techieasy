server
{
    listen 80;
    listen 443 ssl http2;
    server_name bebots.gorvet.com;
    index index.php;
    root /www/wwwroot/bebots.gorvet.com;

    #SSL-START SSL related configuration, do NOT delete or modify the next line of commented-out 404 rules
    #error_page 404/404.html;
    #HTTP_TO_HTTPS_START
    if ($server_port !~ 443){
        rewrite ^(/.*)$ https://$host$1 permanent;
    }

    #HTTP_TO_HTTPS_END
    ssl_certificate    /www/server/panel/vhost/cert/bebots.gorvet.com/fullchain.pem;
    ssl_certificate_key    /www/server/panel/vhost/cert/bebots.gorvet.com/privkey.pem;
    ssl_protocols TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_ciphers EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:!MD5;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    add_header Strict-Transport-Security "max-age=31536000";
    error_page 497  https://$host$request_uri;
    #SSL-END


    #REWRITE-START URL rewrite rule reference, any modification will invalidate the rewrite rules set by the panel
    include /www/server/panel/vhost/rewrite/bebots.gorvet.com.conf;
    #REWRITE-END

    #Directory verification related settings for one-click application for SSL certificate
    location ~ \.well-known{
        allow all;
    }
           # Forbidden files or directories
    location ~ ^/(\.user.ini|\.htaccess|\.git|\.env|\.svn|\.project|LICENSE|README.md)
    {
        return 404;
    }

 #Prohibit putting sensitive files in certificate verification directory
    if ( $uri ~ "^/\.well-known/.*\.(php|jsp|py|js|css|lua|ts|go|zip|tar\.gz|rar|7z|sql|bak)$" ) {
        return 403;
    }
    
    #Redirigir todas las solicitudes al controlador frontal
    location / {
    
        #autoindex off;
        #try_files $uri $uri/ /index.php;
       # try_files $uri $uri/ /index.php?$query_string;
         if (!-e $request_filename) {
       rewrite  ^(.*)$  /index.php/$1  last;
       break;
    }
        include enable-php-81.conf; 
    }  
   
    
     # Permitir acceso a todo dentro de "public" incluyendo "public/app"
    location ~* ^/public(/.*)?$ {
        try_files $uri $uri/ =404;
    }
  
  
 
  location ~* /(app|core)(/.*)?$ {
   set $deny_access "yes";
       if ($http_x_requested_with = "XMLHttpRequest") {
             set $deny_access "no";
        }
        if ($http_x_webhook_wapi != "") {
            set $deny_access "no";
        }
        
        if ($deny_access != "no")
        {
            return 403;
        }
   
}

 
    #Manejo de errores
    error_page 403 404 500 503 /index.php?error_code=$status;

    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
    {
    expires 30d;
    error_log /dev/null;
    access_log /dev/null;
    }

    location ~ .*\.(js|css)?$
    {
    expires 12h;
    error_log /dev/null;
    access_log /dev/null; 
    }
    
    
    access_log  /www/wwwlogs/bebots.gorvet.com.log;
    error_log  /www/wwwlogs/bebots.gorvet.com.error.log;
}